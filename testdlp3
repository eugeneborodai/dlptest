

Classify Word, Excel, and Text Files Containing an Employee Name
This rule classifies a Word, Excel, or text file when it finds at least one instance of the firstname content pattern in the content buffer.
This rule assumes the ‘firstname’ content pattern contains a reference to the ‘employee’ dictionary using the following syntax:
(?A:employee/preferredfirstname)


<and>
	<greaterThan>
             <evtSrcFileEntityFrequency name="firstname"/>
             <int value="0"/>
	</greaterThan>
	<in>
		<evtSrcFileExt/>
		<list>
			<string value="doc"/>
			<string value="docx"/>
			<string value="txt"/>
			<string value="ppt"/>
		</list>
	</in>
	<greaterThan>
		<evtDestFileEntityFrequency name="firstname"/>
		<int value="0"/>
	</greaterThan>
	<in>
		<evtDestFileExt/>
		<list>
			<string value="doc"/>
			<string value="docx"/>
			<string value="txt"/>
			<string value="ppt"/>
		</list>
	</in>
</and>




A dictionary is a listing of possible matches for a content pattern. For example, a dictionary might contain a listing of employee names, or a list of postal codes and state names. The DG Agent would match a content pattern against possible values to identify and classify documents containing these values.

This example shows a dictionary that matches regional names against standardized names for those regions.

<Grammars>
<Dictionary name="geographical" default_case="off">
<EntrySet name="region">
	<Entry headword="Occident" />
	<Entry headword="Middle East">
<Synonym>Near East</Synonym>
</Entry>
	<Entry headword="Far East" />
	<Entry headword="Asia-Pacific">
<Synonym>Asia Pacific</Synonym>
</Entry>
	<Entry headword="Latin America" />
	<Entry headword="Latin Americas" />
	<Entry headword="Americas" />
</EntrySet>
<EntrySet name="continent">
<Entry headword="Africa" />
	<Entry headword="Antarctica" />
	<Entry headword="Asia" />
	<Entry headword="Australia" />
	<Entry headword="Oceania" />
	<Entry headword="Eurasia" />
	<Entry headword="Europe" />
	<Entry headword="North America" />
	<Entry headword="South America" />
	<Entry headword="America" />
</EntrySet>
</Dictionary>
</Grammars

To refer to a dictionary in a content pattern, enter the following syntax:
(?A:<dictionaryname>/<entry_setName>)

For the proper syntax in creating dictionaries, refer to the Eduction User Guide. 



CONTENT PATTERN

	A content pattern is a keyword or alphanumeric sequence that Digital Guardian Adaptive Content Inspection recognizes in a file. Typical content patterns might be social security numbers, telephone numbers, credit card numbers, addresses, or any alphanumeric sequence.

	When the Digital Guardian Scanner recognizes a particular content pattern in a file, it assigns a classification name to the file stream of the classified file. The classification name is determined by the Classification policy that identified the file content. The scanner then adds a frequency number to the classification name. The frequency number identifies the number of times that the content pattern appears in the file.



CONTENT PATTERN TYPES

	Content patterns are literal keywords or patterns of alphanumeric text that Adaptive Content Inspection can recognize in a file. You must create your content patterns using the pattern syntax described in the Eduction documentation.

	You can use the following content pattern types.

		Entity Content Pattern
		An entity content pattern is an alphanumeric pattern that Adaptive Content Inspection searches for in files. You can create patterns that match the content that you want to identify in your files. An entity content pattern can be complete in and of itself, or it can be constructed from smaller content patterns.


		A query content pattern is a literal keyword or phrase that Adaptive Content Inspection searches for in files. Some common keywords might be “Confidential” or “Proprietary Information”.

		Note: Query content patterns are not supported on the Agent for macOS.


		Modulus 10 Validated Content Patterns

		Digital Guardian provides additional validation capability for the Adaptive Content Inspection content pattern recognition system. This validation capability uses the Luhn algorithm (modulus 10) to prevent false positive matches on content patterns that contain a modulus 10 checksum. The mod 10 checksum is commonly used to identify valid credit card numbers as well as social security numbers in some nations, such as Canada. Only if the pattern passes validation is it accepted as a match.

		You can apply this validation to any content pattern by naming the content pattern with the prefix “cc_”.

		Digital Guardian strongly recommends that you use the cc_ naming convention when creating content patterns designed to detect credit card numbers. For example, rather than creating content patterns called visa and amex, you can create cc_visa and cc_amex.



CREATING CONTENT PATTERNS


You  create content patterns for Adaptive Content Inspection to identify keywords that you want content inspection to recognize in your files.

    Hover your cursor over Policies and select Content Patterns. The Content Patterns page opens, listing all existing content patterns.
    At the top right of the page, select the Create Content Pattern icon . 
    The Content Pattern [New] page opens.
    Under Content Pattern Definition, enter the following information:

		Name: 
		Enter a name for the new content pattern. Each content pattern must have a unique name. This field is required.
		If you enter a name in mixed case or uppercase, Digital Guardian converts the content pattern name to lowercase before saving it.
		Do not include special characters in content pattern names. Special characters can prevent content inspection from properly matching the content pattern.

		Description: 
		Enter a description of the content pattern.

		Status: 
		Click Active to enable the content pattern. 
		Click Inactive to disable the content pattern.

		Type: 
		Specify a content type for your content pattern, either Entity or Query.  
		For more information about content types, refer to Content Pattern Types.

		Note: 
		DG Agents for Windows and Linux support both Entity and Query content patterns. 
		DG Agents for macOS support only Entity content patterns.

		Language: (Query content patterns only) 
		Specify the national language that matches the text. 
		Based on the opening content of a document, ACI automatically recognizes the language of the document and searches only for text that matches the specified language. 
		Digital Guardian currently supports the following languages:
        	English UTF-8
        	Japanese UTF-8

		Container (optional): 
		Select a container for the content pattern from the drop-down list.

		Content Pattern Expression: 
		Enter the data pattern that you want the content inspection engine to match. 
		For more information on the syntax and options for data patterns, refer to the Eduction User Guide. 
		To obtain a copy of this document, contact Digital Guardian Technical Support.


For example, suppose you create the following content pattern called ‘cc_visa’ for Visa credit cards:

	(4[0-9]{3}(-|\s)?[0-9]{4}(-|\s)?[0-9]{4}(-|\s)?[0-9]{4})

	You can then use the content pattern in a rule clause  like the following:

	<greaterThan>

  		<evtBufferEntityFrequency name="cc_visa"/>

  		<int value="1"/>

	</greaterThan>

	The rule with this clause fires when it finds more than one instance of the ‘cc_visa’ content pattern in the content buffer.
    Click the Save Changes icon . 
    You can now use the content pattern in a rule.


IDOL EDUCTION USER GUIDE


Dictionaries
	In Eduction, a dictionary is a file that provides a vocabulary for a simple entity, such as cities or countries. 
	The dictionaries are organized by a list of headwords (simple or compound). 
	Each headword can also have a set of associated words called synonyms. 
	Eduction uses the dictionary to scan a document and extract the defined entities that match the search pattern.
	Dictionaries are written in XML and included in a grammar file.

Grammars
	 grammar is a file that provides rules for complicated entities such as URLs or postal addresses. 
	 The entities can be recursively defined. 
	 Rules can refer to entities in external grammars and dictionaries. 
	 Eduction uses the grammar to scan a document and extract the defined entities that match the search pattern.

	The pattern can be a dictionary of names such as people or places, or the pattern can describe what the sequence of text looks like without having to list it explicitly, for example, a telephone number, or a time.

	Grammars are written in XML and the regular expression format. Eduction supports context-free grammars.

Eduction also allows you to extend existing grammars, and to author new ones, either from scratch or by referencing existing entities. For more information about how and when to extend your grammars, and how to improve the recall of your grammar files, refer to IDOL Expert.


